<!DOCTYPE UI><UI version="3.0" stdsetdef="1">
<class>Bacula_Bat</class>
<comment>TODO:
* remember/save the size of the dialog on exit (currently not possible in Kommander &lt;= 1.3)

0.2.2 (17.Jun.2008)
* add icon to the dialog.

0.2.1 (15.Jun.2008)
* use statusbar instead of label to show status.
* bugfix: don't block the dialog after launching Bat - use timer instead of exec("sleep 3").

0.2 (09.Jun.2008):
* show a simple status text under buttons: advertise launching Bat and set it back to default after 3 seconds.
* Bat's configurations' directory can be selected, it's saved for the next time too.
* bugfix: lay items out in a grid, so that resizing works correctly.
* bugfix: if bat.sh ain't found from within path, search it from current directory (the search just didn't work)

0.1.1 (02.Apr.2008):
* bugfix: compatibility with Kommander 1.2.x - use exec() instead of execBackground()

0.1 (14.Mar.2008)
* initial release ;)</comment>
<author>Silver Salonen</author>
<license>GPL</license>
<version>0.2.2</version>
<widget class="Dialog">
    <property name="name">
        <cstring>Bacula_Bat</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>263</width>
            <height>415</height>
        </rect>
    </property>
    <property name="caption">
        <string>Bat selection</string>
    </property>
    <property name="icon">
        <pixmap>image0</pixmap>
    </property>
    <property name="sizeGripEnabled">
        <bool>false</bool>
    </property>
    <property name="populationText">
        <string></string>
    </property>
    <property name="associations" stdset="0">
        <stringlist>
            <string></string>
            <string>SelectConfig.clear

StatusBar.setText("Double-click on conf to launch Bat.")

// executed from connector SelectConfigDir.widgetTextChanged() only, because at first SelectConfigDir.text is empty, but configDir is not
if !str_isEmpty(SelectConfigDir.text) then
	writeSetting("configDir", SelectConfigDir.text)
// executed if both SelectConfigDir and saved configDir are empty
elseif str_isEmpty(readSetting("configDir")) then
	writeSetting("configDir", "~/.bacula-bat")
endif

// if configDir was NOT got from SelectConfigDir, write the value into SelectConfigDir too.
// this get's started at the beginning as configDir is set in the block above
if SelectConfigDir.text != readSetting("configDir") then
	// after this, initialization gets executed once again, but only once, because both SelectConfigDir and configDir will be the same next time.
	SelectConfigDir.setText(readSetting("configDir"))
// as of 1.3, there could be simple return("0") instead
else
	bat = "bat.sh"
	if str_isEmpty(exec("which " + bat)) then
		bat = exec("which ./bat.sh")
	endif
	
	if str_isEmpty(bat) then
		message_error("Cannot find the bat.sh script!")
		exit
	endif
	
	configs = exec(bat + " -s 0 -l -d " + readSetting("configDir"))
	
	if str_contains(configs, "Error! ") then
		message_error(configs)
	else
		SelectConfig.insertItems(configs, -1)
	endif
	
	if SelectConfig.count == 1 then
		SelectConfig.setCurrentItem(0)
		ExecBat.execute
	endif
endif</string>
            <string></string>
        </stringlist>
    </property>
    <property name="useInternalParser">
        <bool>true</bool>
    </property>
    <grid>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <property name="margin">
            <number>11</number>
        </property>
        <property name="spacing">
            <number>6</number>
        </property>
        <widget class="CloseButton" row="1" column="1">
            <property name="name">
                <cstring>CloseDialog</cstring>
            </property>
            <property name="text">
                <string>Cl&amp;ose this dialog</string>
            </property>
        </widget>
        <widget class="ListBox" row="0" column="0" rowspan="1" colspan="2">
            <property name="name">
                <cstring>SelectConfig</cstring>
            </property>
            <property name="frameShape">
                <enum>StyledPanel</enum>
            </property>
            <property name="frameShadow">
                <enum>Sunken</enum>
            </property>
            <property name="populationText">
                <string></string>
            </property>
            <property name="associations" stdset="0">
                <stringlist>
                    <string></string>
                </stringlist>
            </property>
        </widget>
        <widget class="StatusBar" row="3" column="0" rowspan="1" colspan="2">
            <property name="name">
                <cstring>StatusBar</cstring>
            </property>
            <property name="associations" stdset="0">
                <stringlist>
                    <string></string>
                </stringlist>
            </property>
        </widget>
        <widget class="FileSelector" row="2" column="0" rowspan="1" colspan="2">
            <property name="name">
                <cstring>SelectConfigDir</cstring>
            </property>
            <property name="acceptDrops">
                <bool>true</bool>
            </property>
            <property name="populationText">
                <string></string>
            </property>
            <property name="associations" stdset="0">
                <stringlist>
                    <string></string>
                </stringlist>
            </property>
            <property name="selectionType">
                <enum>Directory</enum>
            </property>
        </widget>
        <widget class="Timer" row="4" column="0">
            <property name="name">
                <cstring>Timer1</cstring>
            </property>
            <property name="backgroundMode">
                <enum>NoBackground</enum>
            </property>
            <property name="populationText">
                <string></string>
            </property>
            <property name="associations" stdset="0">
                <stringlist>
                    <string>StatusBar.setText("Double-click on conf to launch Bat.")</string>
                </stringlist>
            </property>
            <property name="interval">
                <number>3000</number>
            </property>
        </widget>
        <widget class="ExecButton" row="1" column="0">
            <property name="name">
                <cstring>ExecBat</cstring>
            </property>
            <property name="text">
                <string>Launch &amp;Bat</string>
            </property>
            <property name="populationText">
                <string></string>
            </property>
            <property name="associations" stdset="0">
                <stringlist>
                    <string>if ! SelectConfig.currentItem &gt; -1 then
	message_error("Please select configuration!")
	exit
endif

bat = "bat.sh"
if str_isEmpty(exec("which " + bat)) then
	bat = "./bat.sh"
endif

if ! str_isEmpty(bat) then
	StatusBar.setText("Launching Bat: " + SelectConfig.selection + " ...")
	exec(bat + " -s 0 -c " + SelectConfig.selection + "&gt; /dev/null 2&gt;&amp;1 &amp;")
	// compatible with kmdr-executor&gt;=1.3 only :(
	//execBackground(bat + " -s 0 -c " + SelectConfig.selection)
	Timer1.execute
else
	message_error("Cannot find the bat.sh script!")
endif</string>
                </stringlist>
            </property>
            <property name="blockGUI">
                <enum>None</enum>
            </property>
        </widget>
    </grid>
</widget>
<images>
    <image name="image0">
        <data format="XPM.GZ" length="20223"></data>
    </image>
</images>
<connections>
    <connection>
        <sender>SelectConfigDir</sender>
        <signal>widgetTextChanged(const QString&amp;)</signal>
        <receiver>Bacula_Bat</receiver>
        <slot>initialize()</slot>
    </connection>
    <connection>
        <sender>SelectConfig</sender>
        <signal>doubleClicked(QListBoxItem*)</signal>
        <receiver>ExecBat</receiver>
        <slot>startProcess()</slot>
    </connection>
</connections>
<layoutdefaults spacing="6" margin="11"/>
</UI>
